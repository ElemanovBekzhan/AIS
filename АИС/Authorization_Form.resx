<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>